# Multi-Tenant SaaS Inventory Platform Load Balancer Configuration
# Nginx configuration for horizontal scaling with session affinity

# Rate limiting zone
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=uploads:10m rate=5r/s;

# Upstream backend servers for horizontal scaling
upstream backend {
    # Production instance configurations
    server 127.0.0.1:8080 max_fails=3 fail_timeout=30s weight=10;
    server 127.0.0.1:8081 max_fails=3 fail_timeout=30s weight=10;
    server 127.0.0.1:8082 max_fails=3 fail_timeout=30s weight=8;

    # Session affinity using IP hashing for tenant consistency
    ip_hash;

    # Health check parameters
    health_check interval=5s fails=3 passes=2;
}

# Admin upstream for management operations
upstream admin_backend {
    server 127.0.0.1:8080;
    server 127.0.0.1:8081 backup;
}

# Main server configuration
server {
    listen 80;
    server_name agromart2.example.com;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private must-revalidate no_last_modified no_etag auth;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Handle static assets with caching
    location /static/ {
        proxy_pass http://backend;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # API endpoints with rate limiting
    location /v1/ {
        # Rate limiting for API endpoints
        limit_req zone=api burst=20 nodelay;

        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeout configurations
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffer settings for large responses
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # File upload endpoints with more restrictive rate limiting
    location /upload/ {
        limit_req zone=uploads burst=5 nodelay;

        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Larger timeouts for file uploads
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Increase buffer size for file uploads
        client_max_body_size 50M;
        proxy_request_buffering off;
    }

    # Admin endpoints
    location /admin/ {
        proxy_pass http://admin_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Restrict admin access
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }

    # Health check endpoint bypasses rate limiting
    location /health {
        proxy_pass http://backend;
        access_log off;
    }

    # Metrics endpoint for monitoring
    location /metrics {
        proxy_pass http://backend;
        allow 10.0.0.0/8;
        deny all;
    }

    # WebSocket support for real-time features (if needed)
    location /ws/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_read_timeout 86400;
    }

    # Default location - serve everything else through backend
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Maintenance page (uncomment during maintenance)
    # if ($maintenance = "true") {
    #     return 503;
    # }
    # error_page 503 /maintenance.html;
}

# SSL/TLS Configuration (when HTTPS is enabled)
server {
    listen 443 ssl http2;
    server_name agromart2.example.com;

    # SSL certificate configuration
    # ssl_certificate /etc/ssl/certs/agromart2.crt;
    # ssl_certificate_key /etc/ssl/private/agromart2.key;

    # SSL protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # SSL session caching
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Use the same configuration as HTTP server
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Redirect HTTP to HTTPS (uncomment when SSL is enabled)
# server {
#     listen 80;
#     server_name agromart2.example.com;
#     return 301 https://$server_name$request_uri;
# }

# Development server (localhost only)
server {
    listen 8080;
    server_name localhost;

    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}